#! /usr/bin/env bash
shopt | grep compat32 &>/dev/null && shopt -s compat32
recordCommands() { if (( $1 == 0 )) && [ "$2" != "$0" ]; then CHECK_LAST_COMMAND_INFO=("${@:2}"); fi; return 0; }
runTest() {
  declare -p CHECK_SET &>/dev/null && [ -z "$CHECK_SET" ] || set "-${CHECK_SET:-eETu}"
  trap 'shopt -qo nounset && __check__nounset=true || __check__nounset=""; set +u; recordCommands $? "${BASH_SOURCE[0]}" "$LINENO" "${FUNCNAME[0]}"; [ -n "$__check__nounset" ] && set +u;' DEBUG;
  trap 'declare -p CHECK_LAST_COMMAND_INFO' ERR; $CHECK_TEST; CHECK_RESULT=$?
  declare -p CHECK_LAST_COMMAND_INFO; return $CHECK_RESULT;
}
runAndDisplayOutput() {
  CHECK_TEST_OUTPUT="$({
    CHECK_STDERR="$( { CHECK_STDOUT="$( "$0" --run "$CHECK_FILE" "$CHECK_TEST" )"; } 2>&1; CHECK_RESULT=$?; declare -p CHECK_STDOUT >&2; exit $CHECK_RESULT;)"
    CHECK_RESULT=$?; declare -p CHECK_STDERR; declare -p CHECK_RESULT; exit $CHECK_RESULT
  } 2>&1 )" && CHECK_RESULT=$?
  echo
  echo "$CHECK_TEST RESULT: $CHECK_RESULT, OUTPUT: $CHECK_TEST_OUTPUT"
  echo
}
case "$1" in
  -h | --help) echo "$0: <test file> <test file> ..."; exit 0 ;;
  --list) shift; CHECK_FILE="$1"; shift; source "$CHECK_FILE" && declare -pF | awk '{print $3}' | grep "${CHECK_TEST_PATTERN:-^test\|^spec}"; exit 0 ;;
  --run) shift; CHECK_FILE="$1"; shift; CHECK_TEST="$1"; shift; source "$CHECK_FILE" && runTest; exit $? ;;
esac
CHECK_PASSED=0; CHECK_FAILED=0; CHECK_FILES=(); while (( $# > 0 )); do [ -f "$1" ] && { CHECK_FILES+=("$1"); shift; } || { echo "check: unknown argument '$*'" >&2; exit 1; }; done
(( ${#CHECK_FILES[@]} == 0 )) && { while read -rd '' CHECK_FILE; do echo "$CHECK_FILE" | grep "${CHECK_FILE_PATTERN:-.test.sh$\|.spec.sh$}" &>/dev/null && CHECK_FILES+=("$CHECK_FILE"); done < <( find . -type f -name "*${CHECK_FILE_EXT:-.sh}" -print0 ); }
for CHECK_FILE in "${CHECK_FILES}"; do
  CHECK_TESTS="$( "$0" --list "$CHECK_FILE" )" || { echo "Failed to find tests in file: '$CHECK_FILE'" >&2; exit 1; }
  for CHECK_TEST in $CHECK_TESTS; do runAndDisplayOutput; done
done